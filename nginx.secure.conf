# Ultra-secure Nginx configuration for PDF Parser Pro

# Security settings
user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;

# Security: Limit worker connections
events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Security: Hide nginx version
    server_tokens off;
    
    # Security: Content type protection
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Security: Logging format (don't log sensitive data)
    log_format secure '$remote_addr - $remote_user [$time_local] '
                     '"$request_method $scheme://$host$request_uri" '
                     '$status $body_bytes_sent $request_time '
                     '"$http_user_agent"';
    
    access_log /var/log/nginx/access.log secure;
    
    # Security: Basic hardening
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 30;
    types_hash_max_size 2048;
    
    # Security: File upload limits
    client_max_body_size 100M;
    client_body_timeout 60s;
    client_header_timeout 60s;
    client_body_buffer_size 1M;
    client_header_buffer_size 4k;
    large_client_header_buffers 4 8k;
    
    # Security: Rate limiting zones
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=1r/s;
    limit_req_zone $binary_remote_addr zone=global:10m rate=50r/s;
    
    # Security: Connection limiting
    limit_conn_zone $binary_remote_addr zone=perip:10m;
    limit_conn_zone $server_name zone=perserver:10m;
    
    # Security: DDoS protection
    limit_req_status 429;
    limit_conn_status 429;
    
    # Gzip compression (with security considerations)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        application/json
        application/javascript
        text/xml
        application/xml
        application/xml+rss
        text/javascript;
    
    # Security: SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security: OCSP configuration
    resolver 1.1.1.1 1.0.0.1 valid=300s;
    resolver_timeout 5s;

    # Upstream backend
    upstream pdf_parser_backend {
        server pdf-parser-secure:8000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # HTTP server (redirects to HTTPS)
    server {
        listen 80;
        server_name _;
        
        # Security: Return minimal info for non-HTTPS
        return 301 https://$host$request_uri;
    }

    # Main HTTPS server
    server {
        listen 443 ssl http2;
        server_name your-domain.com www.your-domain.com;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options "DENY" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; media-src 'none'; object-src 'none'; child-src 'none'; frame-src 'none'; worker-src 'none'; frame-ancestors 'none'; form-action 'self'; base-uri 'self';" always;
        add_header Permissions-Policy "camera=(), microphone=(), geolocation=(), payment=(), usb=(), accelerometer=(), gyroscope=(), magnetometer=()" always;
        
        # Security: Global rate limiting
        limit_req zone=global burst=100 nodelay;
        limit_conn perip 10;
        limit_conn perserver 1000;
        
        # Security: Block common attack patterns
        if ($request_method !~ ^(GET|HEAD|POST)$ ) {
            return 405;
        }
        
        # Security: Block suspicious user agents
        if ($http_user_agent ~* (wget|curl|python|perl|java|go-http|libwww) ) {
            return 403;
        }
        
        # Security: Block suspicious requests
        if ($request_uri ~* "(\<|%3C).*script.*(\>|%3E)") {
            return 403;
        }
        
        if ($query_string ~* "[;|<|>|'|\"|\)|%0A|%0D|%22|%27|%3C|%3E|%00].*") {
            return 403;
        }
        
        # Main application
        location / {
            limit_req zone=api burst=20 nodelay;
            
            proxy_pass http://pdf_parser_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Security: Timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            
            # Security: Buffer sizes
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # Security: Hide backend errors
            proxy_intercept_errors on;
        }
        
        # API endpoints with stricter limits
        location /api/ {
            limit_req zone=api burst=10 nodelay;
            
            # Security: Additional validation for API calls
            if ($content_type !~ "^(application/json|multipart/form-data|application/x-www-form-urlencoded)") {
                return 415;
            }
            
            proxy_pass http://pdf_parser_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Longer timeout for file processing
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }
        
        # File upload endpoints (most restrictive)
        location ~ ^/api/(parse|upload) {
            limit_req zone=upload burst=3 nodelay;
            
            # Security: File upload restrictions
            client_max_body_size 100M;
            
            proxy_pass http://pdf_parser_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Extended timeouts for file processing
            proxy_connect_timeout 60s;
            proxy_send_timeout 600s;
            proxy_read_timeout 600s;
        }
        
        # Authentication endpoints
        location ~ ^/(signup|login|auth) {
            limit_req zone=auth burst=5 nodelay;
            
            proxy_pass http://pdf_parser_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
        
        # Health check (no rate limiting)
        location /health {
            access_log off;
            proxy_pass http://pdf_parser_backend;
            proxy_set_header Host $host;
        }
        
        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Security: Custom error pages (don't leak info)
        error_page 400 401 403 404 /error.html;
        error_page 500 502 503 504 /error.html;
        
        location = /error.html {
            root /usr/share/nginx/html;
            internal;
        }
    }
    
    # Security: Default server block for undefined hosts
    server {
        listen 80 default_server;
        listen 443 ssl http2 default_server;
        server_name _;
        
        # Dummy SSL certificate for default server
        ssl_certificate /etc/nginx/ssl/dummy.pem;
        ssl_certificate_key /etc/nginx/ssl/dummy.key;
        
        # Return nothing for undefined hosts
        return 444;
    }
}